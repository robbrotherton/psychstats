{"markdown":{"yaml":{"toc":false,"css":"triplett-style.css","header-includes":"<link rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css?family=Permanent Marker\">\n<link rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css?family=Pangolin\">\n"},"containsRefs":false,"markdown":"\n\n\n<div class=\"game-select\" style=\"width: 100%; display: flex; justify-content: center; font-family: Permanent Marker;\">\n<button id=\"practice-button\" class=\"nav\">practice</button>\n<button id=\"alone-button\" class=\"nav\">race alone</button>\n<button id=\"competition-button\" class=\"nav\">race together</button>\n<button id=\"about-button\" class=\"nav\">About</button>\n</div>\n\n    \n<div class=\"title\">Competition Machine &mdash; </div>\n\n<div class=\"machine\">\n\n<div id=\"track\" class=\"track\">\n<button type=\"button\" id=\"handle1\" class=\"handle\"><span id=\"handle-text\">┘</span></button>\n<div id=\"finish\" class=\"finish\">🏁</div>\n<div id=\"flag\" class=\"flag\">🚩</div>\n</div>\n\n<div id=\"track2\" class=\"track\">\n<button id=\"handle2\" class=\"handle\"><span id=\"handle2-text\">┘</span></button>\n<div id=\"finish\"class=\"finish\">🏁</div>\n<div id=\"flag2\" class=\"flag\">🚩</div>\n</div>\n\n</div>\n    \n<div id=\"time\"><span>Your time: </span><span id=\"seconds\">0.00</span></div>\n<button id=\"reset-button\" class=\"reset-button nav\">Reset</button>\n    \n\n<div id=\"instructions\">\n<ul>\n    <li>Click the 'handle' to the left of the 'track' to start.</li>\n    <li>Keep clicking as fast as you can until your flag reaches the end.</li>\n    <li>Click Race Alone to do a timed race by yourself.</li>\n    <li>Click Race Together to race against a competitor.</li>\n</ul>\n</div>\n\n<div id=\"records\">\n    \n<table id=\"records-table\">\n    <colgroup>\n        <col span=\"1\" style=\"width: 40%; text-align: right;\">\n        <col span=\"1\" style=\"width: 30%;\">\n        <col span=\"1\" style=\"width: 30%;\">\n      </colgroup>\n    <thead><th>👑 Records 👑</th><th>Previous</th><th>Best</th></thead>\n    <tr><td>🚩 Alone</td><td><span id=\"alone-previous\">-</span></td><td><span id=\"alone-best\">-</span></td></tr>\n    <tr><td>🚩<span style=\"filter: invert(1);\">🚩</span>Competition</td><td><span id=\"competition-previous\">-</span></td><td><span id=\"competition-best\">-</span></td></tr>\n</table>\n</div>\n\n\n```{ojs}\n//| echo: false\ngame = {\n    var start, myTimer, myTurner;\nvar sec = d3.select(\"#seconds\")\nvar cli = d3.select(\"#clicks\")\nvar flag = d3.select(\"#flag\")\nvar flag2 = d3.select(\"#flag2\")\nvar clicks = 0;\nvar state;\nconst target_clicks = 50;\nvar mode = practice;\n\nvar records = [{prev: 0, best: 0},{prev: 0, best: 0}]\n\nvar handleState = 0;\nconst handle = d3.select(\"#handle-text\");\nconst handle2 = d3.select(\"#handle2-text\");\nconst handleText = [\"┘\",\"└\"]\n\nd3.select(\"#handle1\").on(\"click\", clicked);\nd3.select(\"#practice-button\").on(\"click\", practice);\nd3.select(\"#alone-button\").on(\"click\", alone);\nd3.select(\"#competition-button\").on(\"click\", competition);\nd3.select(\"#reset-button\").on(\"click\", reset);\n\nfunction handleClicked() {\n    handleState++;\n    handle.text(handleText[handleState % 2]);\n}\n\nfunction turnHandle2() {\n    var handle2State = 0;\n    myTurner = setInterval( function(){\n        handle2State++;\n        handle2.text(handleText[handle2State % 2]);\n        if (handle2State > target_clicks) clearInterval(myTurner);\n    }, 7000 / target_clicks);\n}\n\nfunction clicked() {\n    handleClicked();\n    \n    if (clicks==0) {startTimer(); turnHandle2();}\n    if (clicks < target_clicks) {\n        clicks++;\n    cli.text(clicks);\n    flag.transition().duration(300).style(\"left\", `${clicks*(100/target_clicks)*1.00}%`);\n    } \n    if (clicks == target_clicks) stopTimer();\n}\n\nfunction startTimer() {\n    start = Date.now();\n    myTimer= setInterval( function(){\n        var delta = Date.now() - start; // milliseconds elapsed since start\n        sec.html(delta / 1000);\n    }, 10);\n\n    flag2.transition().ease(d3.easeLinear).duration(7000).style(\"left\", \"100%\")\n}\n\nfunction stopTimer() {\n    clearInterval(myTimer);\n\n    var time = Number(sec.html());\n\n    if(state!=\"practice\") {\n        d3.select(\"#\" + state + \"-previous\").text(time);\n\n        var previousBest = Number(d3.select(\"#\" + state + \"-best\").text());\n        if(isNaN(previousBest)) d3.select(\"#\" + state + \"-best\").text(time);\n        else if (time < previousBest) d3.select(\"#\" + state + \"-best\").text(time);\n    }\n}\n\n// function updateTable(time, cell) {\n//     d3.select(cell).text(time);\n// }\n\nfunction practice() {\n    state = \"practice\";\n    reset();\n    d3.selectAll(\".nav\").classed(\"selected\", false);\n    d3.select(\"#practice-button\").classed(\"selected\", true);\n    // d3.select(\"#practice\").style(\"display\", \"block\");\n    d3.select(\"#instructions\").style(\"display\", \"block\");\n    d3.select(\"#track2\").style(\"display\", \"none\");\n    d3.select(\"#time\").style(\"display\", \"none\");\n}\n\nfunction alone() {\n    state = \"alone\";\n    reset();\n    d3.selectAll(\".nav\").classed(\"selected\", false);\n    d3.select(\"#alone-button\").classed(\"selected\", true);\n    d3.select(\"#time\").style(\"display\", \"block\");\n    d3.select(\"#track2\").style(\"display\", \"none\");\n    d3.select(\"#instructions\").style(\"display\", \"none\");\n}\n\nfunction competition() {\n    state = \"competition\";\n    reset();\n    d3.selectAll(\".nav\").classed(\"selected\", false);\n    d3.select(\"#competition-button\").classed(\"selected\", true);\n    d3.select(\"#time\").style(\"display\", \"block\");\n    d3.select(\"#track2\").style(\"display\", \"block\");\n    d3.select(\"#instructions\").style(\"display\", \"none\");\n}\n\nfunction reset() {\n    clearInterval(myTimer);\n    clearInterval(myTurner);\n    sec.text(\"0.00\");\n    cli.text(0);\n    flag.transition().duration(1000).style(\"left\", \"0%\");\n    flag2.transition().duration(1000).style(\"left\", \"0%\");\n    clicks = 0;\n}\n\npractice();\n}\n```\n\n","srcMarkdownNoYaml":"\n\n\n<div class=\"game-select\" style=\"width: 100%; display: flex; justify-content: center; font-family: Permanent Marker;\">\n<button id=\"practice-button\" class=\"nav\">practice</button>\n<button id=\"alone-button\" class=\"nav\">race alone</button>\n<button id=\"competition-button\" class=\"nav\">race together</button>\n<button id=\"about-button\" class=\"nav\">About</button>\n</div>\n\n    \n<div class=\"title\">Competition Machine &mdash; </div>\n\n<div class=\"machine\">\n\n<div id=\"track\" class=\"track\">\n<button type=\"button\" id=\"handle1\" class=\"handle\"><span id=\"handle-text\">┘</span></button>\n<div id=\"finish\" class=\"finish\">🏁</div>\n<div id=\"flag\" class=\"flag\">🚩</div>\n</div>\n\n<div id=\"track2\" class=\"track\">\n<button id=\"handle2\" class=\"handle\"><span id=\"handle2-text\">┘</span></button>\n<div id=\"finish\"class=\"finish\">🏁</div>\n<div id=\"flag2\" class=\"flag\">🚩</div>\n</div>\n\n</div>\n    \n<div id=\"time\"><span>Your time: </span><span id=\"seconds\">0.00</span></div>\n<button id=\"reset-button\" class=\"reset-button nav\">Reset</button>\n    \n\n<div id=\"instructions\">\n<ul>\n    <li>Click the 'handle' to the left of the 'track' to start.</li>\n    <li>Keep clicking as fast as you can until your flag reaches the end.</li>\n    <li>Click Race Alone to do a timed race by yourself.</li>\n    <li>Click Race Together to race against a competitor.</li>\n</ul>\n</div>\n\n<div id=\"records\">\n    \n<table id=\"records-table\">\n    <colgroup>\n        <col span=\"1\" style=\"width: 40%; text-align: right;\">\n        <col span=\"1\" style=\"width: 30%;\">\n        <col span=\"1\" style=\"width: 30%;\">\n      </colgroup>\n    <thead><th>👑 Records 👑</th><th>Previous</th><th>Best</th></thead>\n    <tr><td>🚩 Alone</td><td><span id=\"alone-previous\">-</span></td><td><span id=\"alone-best\">-</span></td></tr>\n    <tr><td>🚩<span style=\"filter: invert(1);\">🚩</span>Competition</td><td><span id=\"competition-previous\">-</span></td><td><span id=\"competition-best\">-</span></td></tr>\n</table>\n</div>\n\n\n```{ojs}\n//| echo: false\ngame = {\n    var start, myTimer, myTurner;\nvar sec = d3.select(\"#seconds\")\nvar cli = d3.select(\"#clicks\")\nvar flag = d3.select(\"#flag\")\nvar flag2 = d3.select(\"#flag2\")\nvar clicks = 0;\nvar state;\nconst target_clicks = 50;\nvar mode = practice;\n\nvar records = [{prev: 0, best: 0},{prev: 0, best: 0}]\n\nvar handleState = 0;\nconst handle = d3.select(\"#handle-text\");\nconst handle2 = d3.select(\"#handle2-text\");\nconst handleText = [\"┘\",\"└\"]\n\nd3.select(\"#handle1\").on(\"click\", clicked);\nd3.select(\"#practice-button\").on(\"click\", practice);\nd3.select(\"#alone-button\").on(\"click\", alone);\nd3.select(\"#competition-button\").on(\"click\", competition);\nd3.select(\"#reset-button\").on(\"click\", reset);\n\nfunction handleClicked() {\n    handleState++;\n    handle.text(handleText[handleState % 2]);\n}\n\nfunction turnHandle2() {\n    var handle2State = 0;\n    myTurner = setInterval( function(){\n        handle2State++;\n        handle2.text(handleText[handle2State % 2]);\n        if (handle2State > target_clicks) clearInterval(myTurner);\n    }, 7000 / target_clicks);\n}\n\nfunction clicked() {\n    handleClicked();\n    \n    if (clicks==0) {startTimer(); turnHandle2();}\n    if (clicks < target_clicks) {\n        clicks++;\n    cli.text(clicks);\n    flag.transition().duration(300).style(\"left\", `${clicks*(100/target_clicks)*1.00}%`);\n    } \n    if (clicks == target_clicks) stopTimer();\n}\n\nfunction startTimer() {\n    start = Date.now();\n    myTimer= setInterval( function(){\n        var delta = Date.now() - start; // milliseconds elapsed since start\n        sec.html(delta / 1000);\n    }, 10);\n\n    flag2.transition().ease(d3.easeLinear).duration(7000).style(\"left\", \"100%\")\n}\n\nfunction stopTimer() {\n    clearInterval(myTimer);\n\n    var time = Number(sec.html());\n\n    if(state!=\"practice\") {\n        d3.select(\"#\" + state + \"-previous\").text(time);\n\n        var previousBest = Number(d3.select(\"#\" + state + \"-best\").text());\n        if(isNaN(previousBest)) d3.select(\"#\" + state + \"-best\").text(time);\n        else if (time < previousBest) d3.select(\"#\" + state + \"-best\").text(time);\n    }\n}\n\n// function updateTable(time, cell) {\n//     d3.select(cell).text(time);\n// }\n\nfunction practice() {\n    state = \"practice\";\n    reset();\n    d3.selectAll(\".nav\").classed(\"selected\", false);\n    d3.select(\"#practice-button\").classed(\"selected\", true);\n    // d3.select(\"#practice\").style(\"display\", \"block\");\n    d3.select(\"#instructions\").style(\"display\", \"block\");\n    d3.select(\"#track2\").style(\"display\", \"none\");\n    d3.select(\"#time\").style(\"display\", \"none\");\n}\n\nfunction alone() {\n    state = \"alone\";\n    reset();\n    d3.selectAll(\".nav\").classed(\"selected\", false);\n    d3.select(\"#alone-button\").classed(\"selected\", true);\n    d3.select(\"#time\").style(\"display\", \"block\");\n    d3.select(\"#track2\").style(\"display\", \"none\");\n    d3.select(\"#instructions\").style(\"display\", \"none\");\n}\n\nfunction competition() {\n    state = \"competition\";\n    reset();\n    d3.selectAll(\".nav\").classed(\"selected\", false);\n    d3.select(\"#competition-button\").classed(\"selected\", true);\n    d3.select(\"#time\").style(\"display\", \"block\");\n    d3.select(\"#track2\").style(\"display\", \"block\");\n    d3.select(\"#instructions\").style(\"display\", \"none\");\n}\n\nfunction reset() {\n    clearInterval(myTimer);\n    clearInterval(myTurner);\n    sec.text(\"0.00\");\n    cli.text(0);\n    flag.transition().duration(1000).style(\"left\", \"0%\");\n    flag2.transition().duration(1000).style(\"left\", \"0%\");\n    clicks = 0;\n}\n\npractice();\n}\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css","triplett-style.css"],"toc":false,"output-file":"triplett.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.310","theme":{"light":"sketchy","dark":["sketchy","../../theme-dark.scss"]},"header-includes":["<link rel=\"stylesheet\" media=\"screen\" href=\"https://fontlibrary.org//face/tex-gyre-adventor\" type=\"text/css\"/>\n","<link rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css?family=Permanent Marker\">\n<link rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css?family=Pangolin\">\n"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}